import nodemailer from "nodemailer";
import { EmailTemplateService } from "./emailTemplateService.js";

export class EmailService {
  
  /**
   * Envoie un email de r√©servation avec templates
   * @param {Array} bookings - Liste des r√©servations
   */
  static async sendReservationEmail(bookings) {
    try {
      const transporter = nodemailer.createTransport({
        service: "gmail",
        auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASS,
        },
      });

      // G√©n√©rer l'email avec le syst√®me de templates
      const htmlContent = await EmailTemplateService.generateBookingEmail(bookings);

      await transporter.sendMail({
        from: `"üè† ImmoVA - R√©servations" <${process.env.SMTP_USER}>`,
        to: process.env.RECEIVER_EMAIL,
        subject: `üì® Nouvelle demande de r√©servation - ${bookings.length} demande(s)`,
        html: htmlContent,
      });

      console.log(`‚úÖ Email envoy√© avec succ√®s pour ${bookings.length} r√©servation(s)`);
      
    } catch (error) {
      console.error('‚ùå Erreur envoi email:', error);
      throw error;
    }
  }

  /**
   * Envoie un email de confirmation au client
   * @param {Array} bookings - Liste des r√©servations
   * @param {Object} clientUser - Donn√©es de l'utilisateur client
   */
  static async sendClientConfirmationEmail(bookings, clientUser) {
    try {
      const transporter = nodemailer.createTransporter({
        service: "gmail",
        auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASS,
        },
      });

      // G√©n√©rer l'email de confirmation client avec le syst√®me de templates
      const htmlContent = await EmailTemplateService.generateClientConfirmationEmail(bookings, clientUser);

      await transporter.sendMail({
        from: `"üè† ImmoVA - Confirmation" <${process.env.SMTP_USER}>`,
        to: clientUser.email,
        subject: `‚úÖ Confirmation de votre demande de r√©servation - ${bookings.length} demande(s)`,
        html: htmlContent,
      });

      console.log(`‚úÖ Email de confirmation envoy√© au client: ${clientUser.email}`);

    } catch (error) {
      console.error('‚ùå Erreur envoi email client:', error);
      throw error;
    }
  }

  /**
   * G√©n√®re un aper√ßu de l'email (pour tests/d√©veloppement)
   * @param {Array} sampleBookings - Donn√©es d'exemple (optionnel)
   * @returns {string} HTML de l'email
   */
  static async generatePreview(sampleBookings = null) {
    return await EmailTemplateService.generateBookingEmail(sampleBookings || [
      {
        _id: { toString: () => 'abc123def456ghi789jkl012mno345pqr678' },
        apartmentId: 'valery-sources-baie',
        startDate: new Date('2025-01-15'),
        endDate: new Date('2025-01-22'),
        price: 650,
        bookedAt: new Date()
      }
    ]);
  }
}